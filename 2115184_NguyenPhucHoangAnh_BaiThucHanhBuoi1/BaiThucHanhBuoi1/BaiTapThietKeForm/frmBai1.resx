<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxMSExETExMWExMWERYWFhETFBEWEhMRGBYZGBYTFxcZ
        HioiGRsnHhYWJDMjJystMDAwGCE2OzYuOiovMC3/2wBDAQsLCw8ODxsRERwtKCInLy8vLy8vMS0vMTEv
        Ly8vLy0vLy8vLy8vLy8vLy8vLy8vLy0vLy8vLy8vLy8vLy8vLy//wAARCADhAOEDASIAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAUGAwQHAgEI/8QARRAAAgIAAgUIBwQHBgcAAAAAAAECAwQRBQYSITET
        MkFRYXGBkQciQlKhscFicoLRFDNDU5Ki4RUWI2PC8CQ0g4STssP/xAAbAQEAAwEBAQEAAAAAAAAAAAAA
        AgMEAQUGB//EADkRAAIBAgIHBAgFBAMAAAAAAAABAgMRBDEFEiFBUZGhE2Fx0RQygbHB0uHwIkJSkvEG
        FaKyFmKC/9oADAMBAAIRAxEAPwDuIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABq43GwqW1ZJRXm33Jb2G7HYxcnZLabQKrjdcox3V0WTf2nGCfzfwITGa643fsYatL7XKSf
        nnEoliIL+D0aWicVU3JeMkul79DooOQ4nXrSS9mEe6tfVsjLtfdIfvNnuhD8it4ymuJuh/TeLkr60Ob+
        CO4g4N/fzH/v35Q/I8rXfSH76f8ACvyOenQ4Pp5k/wDjOK/VDr8p3sHCYa7aR6LZvs2Yv6G/RrbpZ8Nt
        /wDRT+UQsbB7mRl/TWJWc4c38p2cHI4a56VXGpvvol9MjZq1+0gnlLBqXdXan/7MmsVDv5GaWg8SlscH
        /wCl8TqYKDhNfrv2uAuXbHa+TiTFGuVLXr1309tlM9lfijnu7S1VoPeZJ6OxMM4X8Gpe5sswMddiklKL
        TTSaa3pp8GjIWGIAAAAAAAAAAAAAAAAGpjMfXUs7JqPY+L7lxYew7GLk7JbTbBXcRrXVHmVXWfdryXnJ
        ojYa3TnLYeHspTW6yTbWfVuS2e/Mq7aF7XNkdHYlq+pbxaT5Xv0LJj9IKHqx3y+C7yqaXxVdcJ3YixRh
        Fb5S4t9EYrpb6EjLjscq67LGpSUIuTjFZyeXUcd0lrI8biFO5/4dcvUoT9SL637z7X/QjfXdjRGCw9Nz
        9ne3wX3sOh6HqxOOzte1g8FstV1wezi72+E5zyzhHc3lHL6m/HVWuHCd7fXLFYpv42GphNMvksPGUnnO
        Dte/2ZPZh8I5+JN4WcZouirZHm1Juo7yIXEaDS4W3R/7i/5OTR5w2hvVzlZK1SsVajY65+q1stp7Oaal
        KvfmWG3RkZdCMeIwGxGOyubVJ5fac42f6Ikai1otFmEl2daDXFddhxnWPSF2HlCFMK4p1Rk5zrVk3JuS
        lz80ub1Fbu1nxq/auPZGFUcu7KJ1TWPQPKybS4Ssh4bblH4SRRtJ6utZ7iNKEVBbEaMfiKssRUvOVruy
        u7WzRraNhibqFdbir4qV8K1s2zS2JSUXLL7zXkTX90oy59+In96zMiMRpWcKFh+RSUdjZnFvNOE4yzaa
        3tuPX0k9h9a8NPc5ut9VkWl/FwLrnntJ5mbCas0Q9qz+NfkWLR2Bphlz33zZHYe+M1nCUZLri0/kbELM
        jlxqrgXPR061lln/ABMnKr47k+a93czn+FxjRNYbHbS2W+PT1PrAsibwd7wdirk/+GnL1JP9jZJ8xvor
        k+D6G8uD3WkqOFxMb65V2JN74Ti+D3fJoaB0q6bVg75N5/8AL3SebnH9zJ++uhviu3jBfh2bvd3eRqd6
        ycvzLPvXHxX5v3fqZbgATMwAAAAAAAAAAABTNe9av0TYrWalOO1tJZtLNpZdWeT39hQrtaoNt+vJvi3l
        m/Fs3vTJBrE0yaey6Uoy6NpSnmu/eikaPo5Wajmktre20kopZybfQkk2eZXqT7Ro+40Vg8KsJGo82ryd
        /F7fAsM9bZezBPtbb+CPkNcrVxhBrq9df6jLitK6K5KqFVnrPdKxx/w8/tPik+vLvIDS2E5KeWW59HV4
        9K6fEhVjVhmy/BVsDi7qnFbOOZbtG63Qm1GS2W+nPOL7OwjNM6n4a+Tsqm6Jvi4pODfXs9HgyrZkjhdM
        zglHjl0578hCvJZncToqlNWgtjzTLHjtBXSu26ra1XGuquEJbacYV1xhxSae9N+JN6Mpvry2nB90n9UV
        CrWXLin4ZG7TrTHpbXgaVijxqmgrbUnzOjYPGpZbW4kv0qqTfrLf38OBzanWat+2l37jfp03W+E4vulF
        lixF+Bknolw3P79hb8V+jrahtRi9lSe00vs57+4q+k8Ph5Z5Tg+5ox4idd2Tlm2lkmpSW7wZq3aGrnzb
        Jx8Yv5oOrJZJHFo+jJ3qSlf2PzILSWgqp55Th8foiuYvUty5tsPKX1SLbidU7nnsYhPskmn5rMhsZq3j
        I5/4bmuuLcvhHf8AAqlXqrcbaWisBLZ2nN2+VkHVqNZF7UMSoy+xGafnmSmEwOMq/aTtXVKMJfHPMjbI
        Ti8pbSfU1JP4mWnSVkOE347/AJlfpM3vfTyN60Nh4rZGL8db5mSdulrYcasvwtfNmOGs1seCX8Ip1ikt
        0kpd24yPH4aznQUX15ZPziO1m/zM48Dh4+tQj7Nv3zPVGumIhNzio5uKTTi8nlwbXWetLa8XYiGxZXVn
        mnGcYzjOLXCSlt7mal2ia576rF91tNea4ETisJOt5Sjl1PofczjqVLbXsEcHhHJOEEmvFM6Tq96W1CuM
        MXXKTikuVg47ckumUXlv68mXPR3pE0fdwvUH1WxcPi93xPzyzxKJZHESWZjr6HoSbcbrw8j9T4fS1E+Z
        fVP7tkH9TdR+SGn1m3g9MX0/q7pw7pTj8mWrEdxhnoZLKfNfG/wP1aD87aN9JukKWtq3lY+7YoTz/Fkn
        8S6aF9MNUmo4mpw+3W813uMsn5NlirxeewyVNF14+raXhnydnyudVBGaI05h8VHOi2M+uOfrx+9F70SZ
        cnfI8+UXF2krMAAHCiek7QE7sHOUJzlyc1c6pNSTjFPPZzWayzz49BxK2xxw2NkudyKin2TtrjL+VteL
        P1M9+45Lrx6OHGN9uGydcq57dLeUoLPazg+DSaTyfDLpM9WD11Nbj1sDioLDVMNJ21k7Pvtk/gcg0Joq
        Vz2I7lGOcpdX9Wy101SdDpk3KVScqpPnSgs3Ot9y9aPYmuhFg9CeA5WvGNLN7da8NmTNrXfREqliLl6s
        qYRsj96OUv6Fs4KcXFmDC4meGqxqwzXu3o57yqPW2usx4mcW1OO6M/Wy6m+MfB5owHlOFnY/QYYrXipR
        2p7TbzPmZqZn3lH1nNQl6Qt5s5jaNblmfeWGqO3jxN2GLnHmza7pNG5Tp6+HCxvslv8AmQ/KoKfadV0Q
        k4Szs+RacPrjdHnRT8GmS2E15j7cHHti1JfQrkHRhlDlpZTnFSVdcVKzZftNNxjCPa2m+hM26cRhr/Vh
        ZlJ/s7oquTfVGSlKLf4kaIwq2uePWr4DXcHa/jb6dS116xYO9bM3CX2bIr5yWXxNfFarYW9bVcnB9cHn
        Hyf0ZQdKYN0zcWmux8V1pmCjFzg84yafXFtfIi6l/WVy+OE1fxUKjXVffsZc8P6Pb5yaU4ygotqSlknl
        0OL3oqGLo2Jyg+MZNeKJ7Reu+Ip3SanHpz3S80Slrwukeb6l74PcpN/aXCS7eJxxhJfhzOxr4ilJuvtj
        xW7ve8o6m1weXcZljpZbMntR6pb/AI8TDiL8LXKUZ4hNxbT5KE5rNfaeyn4Nmt/a+DXtYiXdXXH/AOjO
        qjU4EZ6Swe+afN+5GRnhnienMJ0V3PvdS/MxPWGhcMPJ99sV8oElh6nAolpfC8XyZnZ5Zqz1jh7OGj4z
        m/lkYv7xy6KaV+G1/OZNYefcUy0xh+EuS8zdcD5yfYaEtY7uiNa7q4/XMwy07iH+0y7owXyRJYeW9maW
        l6W6D6fUsOjbr6pKVMpwkuEoOaa8Udj1D9IMrnGjGRcLHlGF+y1GyXRGfRGXDfwfZ0/nKzHWy51k33zl
        +Z5w104zi4Skp5rJpvPPPcWwpODumYsTj4V46sqfg77V0P20Dm/6Rj/fZ9LjzrHRzT0jk67Ie9XKPmmv
        qbhGaTrbW4HDjXoUxDjdi8PynJy2IzS97k5OEvLaj5kl6T9IOuF9bltKylJS73k18Cka10W4DH2Trbg5
        SdsH0OM29qL61nmsu4idOawW4hLldlKObyipcet5tgEdhcbs2KttbLy3tpKMn7Tb4LhmWNaCtl+rddq/
        yra5vyUs/gUG2e02+tlvw2irYwhx4LNdGZRUoqTv9+5np4XSdSjBU3tSy2Xf+0dh7xWCtr59co9s4SSf
        c3xNXaJKrGYqrm2Ty93NqD748H4o+z0y3+tw1M+t8nsSf/jcd5U8Oz0YaXi/WXL6q3+RFbQ2iU5TBWfv
        qZPqcbIruzUXl4s+f2RCX6nEVT+zOUqp/wA6S8pMg6TRpjjaUle/lzV11IraNjBpOytPg5xT7s95nxOg
        8RBbUqpbPvxW3D+KGaNCmxxlF5cGn5Mjq2zLFVUl+F38Np60bVPE3TlzrLrXve/JZvd3JJ+CLFitAqOU
        ct/vPPNm16J9G8pjNlZerVdNZ/eUc/KRf9N6D2b4xfBQT3drf5Honx7TTs8zmOJnOVbos321rark+Nlf
        TDtaW9dma6EQfLFs9I9KqspnDdLkpb1xTg00/wCYp07VNRsjuUuclwjP2o93Suxoy16avrI9zRmNko9k
        3ll4ffQy8sb2hrv8VZPJ7LyfbsvIh9ozYbEOElJcYtP+hSopO56k60pQceKa5orALZpSnBWWSlVVZVB5
        ZQVsWk8t+WcG1v7SJ5XCxbXJWSyftWr/AExRuU08j5aeFqQSc7L2kSCTljKOjDR8bLn8pH2rGwb3Yerx
        c382db7iuNO7spLr5EWCxVzi1+prX4F9TLC3LhCtd0IfkVOsuBtho2pLbddStJZmeGDsfCub/DI3ZaVv
        eezJxX2VGO7wPMLr5P1rJ5fee8m5W/kzRoqTsr/t82Y/7Iu/dtfecY/Nlr9HWo9uMxdaeyqq5RstakpN
        QUs1HduzeWXmRGDolKUYRTlOUlGMVvbk3kku3M/S3o/1YWj8NGt5O2fr3SXTPoin1RW7zfSRhNyZfiML
        To0023d5IsX6LDqPpmBaYAeZRzPQAKvrbqXh8fXsWJxlF5wthz4P6rsZzXGegq2W6ONjs58HQ8/Fqe87
        kADjmrvoUromrLrXfKLzjHY2K0+htZttrvLhLU2HUXMAFAxWpMHwRBY3UTqR1to8SqT6ADhGN1Hks/V+
        ZA4rVKcfZfxP0fZgoPoRpX6Erl7K8gN9z83LRt9MtqEpwl70HKL8z1PTGMW6cuVX+bCFmfftxZ3nF6pV
        y9leRA47UWL4IjqosVWad738dvvuUH0b6UnHSVUnsQdsZ1erCEIJuGcfViklm4x8zpuuN86tic5KWa2c
        10Nb8n8Sgazam3UQ5elParak9nnJJ85d3Ew4rXmF1OVlUnZlvSa5Ny95PijqViDd3cruvGkOUk23za35
        y/2im6PxOy3F82XHsy4M3dPYza3dMnm+xdC/31GPQ2iZ25zyeytyfXINXVmdhNwkpRzRmcz5tm29Ezj0
        eZ5eBl7pT2J6X9x/6mrypgdUSwYXQ9clm5OL6YvJP+ptLQNXvZ/iRJUrbyueO1s49Sr8nE+x2UWd6HpX
        V5mOWjK+iOfcmzvZ95D01r1Yor6tPsrSbeiJPm1N+GXzPdeq98+FeXeR7FcSz+4ytl1+hWliOqPwX5D9
        Jl0RL9oz0bXWtbc9hdkM38Wi+aE9DmDyTundb1xcowj/ACrP4k+zjwKPTK36vcbPol1Lprw+Gxlte1iZ
        wc1KTeVcZZ7OzHgns5b+O9nTDFRTGEYwilGMUoxiuCilkkvAykkksjPOcpu8ndgAHSIAAAAAAAAAAAAA
        AAPLij0ADFOiL6Ch6w+ivC4mUp1ynh5vjyWy4N9exJZLwOggA5DhPQbhoz27b7bt+ey9iEX35LPyaLXX
        qPTCKhCCjFLJRS3JFzABR7NRq30GF6hV9RfgAUKOoVfUZI6i1dReQAUuOpFXUjZq1NpXsotYAIGnVimP
        so3KtDVR9lEkADWrwkFwSNhLI+gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA//9k=
</value>
  </data>
</root>